# TODO: use https://github.com/jeanphorn/log4go to do rotation in server (won't loose logs this way)
apiVersion: v1
kind: Pod
metadata:
  name: server1
  labels:
    app: server1
spec:
  volumes:
    - name: logs
      persistentVolumeClaim:
        claimName: logs-pv-claim
  initContainers:
    - name: server1-createlogdir
      image: alpine:3.10.1
      command:
        - touch
      args:
        - /var/log/goserver/goserver.log
      volumeMounts:
        - name: logs
          mountPath: /var/log/goserver/
  containers:
    - name: server1
      imagePullPolicy: Never
      image: goserver.local:latest
      ports:
        - containerPort: 80
      volumeMounts:
        - name: logs
          mountPath: /var/log/goserver/
      env:
        - name: SUCCESS_RATE
          value: "0.5"
---
apiVersion: v1
kind: Pod
metadata:
  name: filebeat
spec:
  volumes:
    - name: logs
      persistentVolumeClaim:
        claimName: logs-pv-claim
  containers:
    - name: filebeat
      imagePullPolicy: Never
      image: filebeat.local:latest
      volumeMounts:
        - name: logs
          mountPath: /var/log/goserver/
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: logrotate
spec:
  suspend: false
  schedule: "*/1 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      parallelism: 1
      completions: 1
      backoffLimit: 0
      template:
        spec:
          volumes:
            - name: logs
              persistentVolumeClaim:
                claimName: logs-pv-claim
          restartPolicy: Never
          containers:
            - name: logrotate
              imagePullPolicy: Never
              image: logrotate.local:latest
              args: 
                - "/etc/logrotate.conf"
              volumeMounts:
                - name: logs
                  mountPath: /var/log/goserver/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logs-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 150Mi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: logs
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 300Mi
  hostPath:
    path: /data/log/
---
apiVersion: v1
kind: Service
metadata:
  name: test-server-service
spec:
  type: NodePort
  selector:
    app: server1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30011